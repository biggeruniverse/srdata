#copyright savagerebirth.com (c) 2011
#demo screen

from silverback import *;
import glass;
import gdata.youtube;
import gdata.youtube.service;

class DemosLoadAction(Action):
	def __init__(self):
		Action.__init__(self);
		self.list = File_ListFiles("/demos/", "*.demo", 0);
		self.done = False;

	def run(self):
		for demo in self.list:
			demos.list.addRow(demo)
			#TODO: maybe add the Demo_GetInfo here

		demos.list.adjustWidthTo(demos.listWidth);
		self.done = True;

	def isDone(self):
		return self.done;

class DemoWindow(DefaultWindow):
	def __init__(self):
		DefaultWindow.__init__(self):
		self.setFrameStyle("TrimmedEight");

		self.loadingAction = None;
		
	def onShow():
		if self.loadingAction is not None:
			self.loadingAction.stop();
		self.list.erase();
		self.loadingAction = ActionSequence(demos.DemosLoadAction());

demos = DemoWindow();
mainmenu.addModule("demos", demos);
demos.setSizePct(.9,1);


bg = DefaultLabel();
bg.setOpaque(1);
bg.setBackgroundColor(black);
bg.setSize(screenWidth, screenHeight);
bg.setPosition(0,0);
glass.GUI_ScreenAddWidget("demos", bg);

scroll = glass.GlassScrollArea();
scroll.setSizePct(xoffset-2*padding, 1.0-2*padding);
scroll.setPositionPct(padding, padding);
scroll.setVerticalScrollPolicy(scroll.SHOW_ALWAYS);
glass.GUI_ScreenAddWidget("demos", scroll);

list = DefaultList();
list.autoAdjust = False;
listWidth = scroll.getWidth() - scroll.getScrollbarWidth();
scroll.setContent(list);

name = DefaultLabel("demo_name_here");
name.setFont(fontSizeLarge);
name.setPositionPct(xoffset+padding, padding);
name.adjustSize();
glass.GUI_ScreenAddWidget("demos", name);

server = DefaultLabel("Recorded on server_name_here");
server.setPosition(name.getX(), name.getY() + name.getHeight() + pxpadding);
glass.GUI_ScreenAddWidget("demos", server);

overlay = DefaultLabel("");
overlay.setImage('/textures/loading/nfm_mapoverlay.s2g');
overlay.setPosition(server.getX(),server.getY() + server.getHeight() + pxpadding*2);
overlay.setSizePct(1.0-xoffset-2*padding, 0);
overlay.setHeight(overlay.getWidth());

map = DefaultLabel();
s = int(overlay.getWidth()*0.76);
map.setSize(s,s);
x = int(0.55 *(overlay.getWidth()   - map.getWidth()  ));
y = int(0.35*(overlay.getHeight()  - map.getHeight() ));
map.setX(overlay.getX() + x);
map.setY(overlay.getY() + y);
map.setOpaque(1);

glass.GUI_ScreenAddWidget("demos", map);
glass.GUI_ScreenAddWidget("demos", overlay); 

noMap = DefaultLabel("^900Map file missing!"); #todo map file download?
noMap.setX(overlay.getX() + (overlay.getWidth()-noMap.getWidth())//2);
noMap.setY(overlay.getY() + overlay.getHeight()//2 - noMap.getHeight() - pxpadding//2);
glass.GUI_ScreenAddWidget("demos", noMap);

noOverhead = DefaultLabel("^rMinimap file missing!");
noOverhead.setPosition(noMap.getX(), noMap.getY() + noMap.getHeight() + pxpadding);
glass.GUI_ScreenAddWidget("demos", noOverhead);

size = DefaultLabel("Length: xy.ab MB");
size.setPosition(server.getX(), overlay.getY() + overlay.getHeight() + pxpadding*2);
glass.GUI_ScreenAddWidget("demos", size);

play = glass.GlassButton("PLAY DEMO");
play.setPosition(size.getX(), size.getY() + size.getHeight() + pxpadding);
h = play.getHeight();
play.setSizePct(1.0-xoffset-2*padding, 0);
play.setWidth(play.getWidth() - pxpadding);
play.setHeight(h);
play.setClickAction("demos.handler.play()");
glass.GUI_ScreenAddWidget("demos", play);

rename = glass.GlassButton("Rename");
rename.setClickAction("demos.handler.confirmRename()");
rename.setPosition(play.getX(), play.getY() + play.getHeight() + pxpadding);
rename.setWidth((play.getWidth() - pxpadding)//2);
glass.GUI_ScreenAddWidget("demos", rename);

delete = glass.GlassButton("Delete");
delete.setClickAction("demos.handler.confirmDelete()");
delete.setPosition(rename.getX() + rename.getWidth() + pxpadding, rename.getY());
delete.setWidth(rename.getWidth());
glass.GUI_ScreenAddWidget("demos", delete);

back = glass.GlassButton("<< MAIN MENU");
back.setPosition(rename.getX(), rename.getY() + rename.getHeight() + pxpadding);
back.setSize(rename.getWidth(), rename.getHeight());
back.setClickAction("GUI_ShowScreen('mainmenu')");
glass.GUI_ScreenAddWidget("demos", back);

refresh = glass.GlassButton("Refresh List");
refresh.setClickAction("demos.onShow()");
refresh.setPosition(delete.getX(), back.getY());
refresh.setSize(delete.getWidth(), delete.getHeight());
glass.GUI_ScreenAddWidget("demos", refresh);

upload = glass.GlassButton("Upload a Savage Video to YouTube");
upload.setPosition(back.getX(),back.getHeight() + back.getY() + pxpadding);
upload.setSize(play.getWidth(), play.getHeight());
upload.setClickAction("demos.ythandler.showUploadWin()");
glass.GUI_ScreenAddWidget("demos", upload);


backdrop = DefaultLabel();
backdrop.setImage("/gui/standard/black.s2g");
backdrop.setSizePct(1,1);
backdrop.setOpaque(1);
backdrop.setVisible(0);
backdrop.setAlpha(0);
glass.GUI_ScreenAddWidget("demos", backdrop);

confirmWin = glass.GlassWindow("Delete Demo");
glass.GUI_ScreenAddWidget("demos", confirmWin);
confirmWin.setVisible(0);
confirm = DefaultLabel("Are you sure you want to delete\n demo_name_here.demo?");
confirmWin.add(confirm, 4, 0);

input = glass.GlassTextField();
input.setSize(200, confirm.getHeight()//2);
confirmWin.add(input, 2, 0);

yes = glass.GlassButton("Rename");
no = glass.GlassButton("Cancel");
no.setClickAction("demos.handler.hideConfirm()");
h = confirm.getHeight() + pxpadding;
confirmWin.add(yes, 0, h);
confirmWin.add(no , 0, h);

confirmWin.setHeight(confirmWin.getTitleBarHeight() + 4 + h + yes.getHeight());

## Upload window ##

contents = [];

uploadWin = glass.GlassWindow("Upload");
glass.GUI_ScreenAddWidget("demos", uploadWin);
uploadWin.setVisible(0);
uploadWin.setPositionPct(0.4,0.3);
uploadWin.setSizePct(0.3,0.3);

title = DefaultLabel("Select the video you want to upload.");
uploadWin.add(title, 4, 0);

back = glass.GlassButton("Back");
uploadWin.add(back, 4, 0);
back.setY(uploadWin.getHeight() - uploadWin.getTitleBarHeight() - back.getHeight() - pxpadding);

next = glass.GlassButton("Next");
uploadWin.add(next, (uploadWin.getWidth() - next.getWidth() - pxpadding), back.getY());

videoList = glass.GlassListBox();
videoList.setSize(uploadWin.getWidth() - 2* pxpadding, int(uploadWin.getHeight()/1.5));
videoListScroll = glass.GlassScrollArea(videoList);
videoListScroll.setSize(videoList.getWidth(),videoList.getHeight());
uploadWin.add(videoListScroll);
videoListScroll.setPosition(pxpadding, title.getY() + title.getHeight() + pxpadding);

contents.append([videoList, videoListScroll]);

loginContainer = glass.GlassContainer();
loginContainer.setVisible(0);
uploadWin.add(loginContainer, pxpadding, title.getY() + title.getHeight() + pxpadding*2);
loginContainer.setWidth(uploadWin.getWidth() - pxpadding*2);

usernameLabel = DefaultLabel("Account email: ");
loginContainer.add(usernameLabel, 0,0);

usernameInput = glass.GlassTextField();
loginContainer.add(usernameInput, usernameLabel.getX() + usernameLabel.getWidth() + pxpadding*2, usernameLabel.getY());
usernameInput.setSize( int(loginContainer.getWidth() - (4*padding + usernameLabel.getWidth())),usernameLabel.getHeight());

passwordLabel = DefaultLabel("Password: ");
loginContainer.add(passwordLabel, 0, usernameLabel.getY() + usernameLabel.getHeight() + pxpadding);

passwordInput = glass.GlassTextField();
passwordInput.setSize(usernameInput.getWidth(), usernameInput.getHeight());
passwordInput.setHidden(1);
loginContainer.add(passwordInput, usernameInput.getX(), passwordLabel.getY());

contents.append([loginContainer]);

videoinfo = glass.GlassContainer();
videoinfo.setVisible(0);
uploadWin.add( videoinfo, pxpadding, loginContainer.getY() );
videoinfo.setSize(loginContainer.getWidth(), back.getY() - (uploadWin.getTitleBarHeight() + title.getY() + title.getHeight() + pxpadding ));

videoTitle = DefaultLabel("Video Title:");
videoinfo.add(videoTitle, 0,0);
titleInput = glass.GlassTextField();
videoinfo.add(titleInput, videoTitle.getX() + videoTitle.getWidth() + pxpadding*2, videoTitle.getY());
titleInput.setSize( int(videoinfo.getWidth() - (4*padding + videoTitle.getWidth())),videoTitle.getHeight());

videoKeywords = DefaultLabel("Keywords:");
videoinfo.add(videoKeywords, 0,videoTitle.getY() + videoTitle.getHeight() + pxpadding);
keywordsInput = glass.GlassTextField();
videoinfo.add(keywordsInput, titleInput.getX(), videoKeywords.getY());
keywordsInput.setSize( titleInput.getWidth() ,videoKeywords.getHeight());

videoDescription = DefaultLabel("Description:");
videoinfo.add(videoDescription, 0,videoKeywords.getY() + videoKeywords.getHeight() + pxpadding);

descriptionInput = glass.GlassTextBox();
descriptionInput.setSize(videoinfo.getWidth() - 2*pxpadding, videoinfo.getHeight() - descriptionInput.getY());
descriptionScroll = glass.GlassScrollArea(descriptionInput);
descriptionScroll.setSize(descriptionInput.getWidth(),descriptionInput.getHeight());
videoinfo.add(descriptionScroll, 0, videoDescription.getY() + videoDescription.getHeight() + pxpadding );
# The description thingy behaves very strange, GLassTextBoxes are weird.

contents.append([videoinfo]);

class DemoHandler:
	def getSelectedDemo(self, name=False):
		s = demos.list.getItem(demos.list.getSelected(),0);
		if name:
			s = s[7:-5]; #remove /demos/ and .demo
		return s;
	
	def onValueChanged(self, e):
		path = self.getSelectedDemo();
		name = self.getSelectedDemo(name=True);
		demos.name.setCaption(name);
		demos.name.adjustSize();
		
		data = Demo_GetInfo(path);
		demos.server.setCaption("Recorded on "+data["server"]);
		demos.server.adjustSize();
		
		overhead = "/world/"+data["world"]+"_overhead.jpg";
		if File_Exists(overhead):
			demos.noOverhead.setVisible(0);
			w, h = demos.map.getWidth(), demos.map.getHeight();
			demos.map.setImage(overhead);
			demos.map.setVisible(1);
			demos.map.setSize(w,h);
		else:
			demos.noOverhead.setVisible(1);
			demos.map.setVisible(0);
		
		world = "/world/"+data["world"]+".s2z";
		if File_Exists(world):
			demos.noMap.setVisible(0);
			demos.play.setVisible(1);
		else:
			demos.noMap.setVisible(1);
			demos.play.setVisible(0);
		
		size = data['filesize'] * 2**-20;
		demos.size.setCaption("Length: "+ str(round(size, 2)) +" MB");
		demos.size.adjustSize();
	
	def play(self):
		path = self.getSelectedDemo();
		Demo_Play(path);
	
	def getModalFocus(self):
		demos.confirmWin.setVisible(1);
		demos.confirmWin.requestModalFocus();
		ActionSequence(FadeInAction(demos.backdrop, target=180));
		#seems to be executing too fast. TODO make the fade actions work like guiaction??
	
	def confirmDelete(self):
		self.getModalFocus();
		demos.confirmWin.setCaption("Delete Demo");
		demos.confirmWin.setVisible(1);
		
		s = "Are you sure you want to delete\n" + self.getSelectedDemo(name=True) + ".demo?";
		demos.confirm.setVisible(1);
		demos.confirm.setCaption(s);
		demos.confirm.adjustSize();
		demos.input.setVisible(0);
		
		winWidth = 8+demos.confirm.getWidth();
		demos.confirmWin.setWidth(winWidth);
		demos.confirmWin.centerWindow();
		
		demos.yes.setCaption("Yes");
		demos.no.setCaption("No");
		widgetWidth = demos.yes.getWidth() + 16 + demos.no.getWidth();
		demos.yes.setX((winWidth - widgetWidth)//2);
		demos.no.setX(demos.yes.getX() + demos.yes.getWidth() + 16);
	
	def confirmRename(self):
		self.getModalFocus();
		demos.confirmWin.setCaption("Rename Demo");
		demos.confirmWin.setVisible(1);
		
		demos.confirm.setVisible(0);
		demos.confirm.adjustSize();
		demos.input.setVisible(1);
		demos.input.setText(self.getSelectedDemo(name=True)+".demo");
		
		winWidth = 8+demos.input.getWidth();
		demos.confirmWin.setWidth(winWidth);
		demos.confirmWin.centerWindow();
		
		demos.yes.setCaption("Rename");
		demos.no.setCaption("Cancel");
		widgetWidth = demos.yes.getWidth() + 16 + demos.no.getWidth();
		demos.yes.setX((winWidth - widgetWidth)//2);
		demos.no.setX(demos.yes.getX() + demos.yes.getWidth() + 16);
	
	def onAction(self, e):
		if e.action == "Close":
			self.hideConfirm();
		elif e.widget is demos.yes and e.widget.getCaption() == "Rename":
			File_Rename(self.getSelectedDemo(), "/demos/"+demos.input.getText()); #TODO need File_Rename
			self.hideConfirm();
			demos.onShow();
		elif e.widget is demos.yes and e.widget.getCaption() == "Yes":
			File_Delete(self.getSelectedDemo());
			self.hideConfirm();
			demos.onShow();
	
	def hideConfirm(self):
		ActionSequence(FadeOutAction(demos.backdrop, target=0));
		demos.confirmWin.releaseModalFocus();
		demos.confirmWin.setVisible(0);
		
class UploadHandler:
	def __init__(self):
		import gdata.youtube;
		import gdata.youtube.service;
		## set up the yt service object		
		self.yt_service = gdata.youtube.service.YouTubeService();
		self.yt_service.ssl = False # documentation says that ssl is not ready/finished yet
		#self.yt_service.developer_key = "AI39si7Dksm64Mm-l5sW3prUoVNCbm9LC_RdQdIj0fSA_FUR8KjIE2ampVhxseyuEII8L212uwa68jaogblrlHkPInzj8uMyFw"
		#self.yt_service.source = 'justsometesting' # program name, should be Savage: Rebirth or something similar 
		self.previousContent = [];
		self.currentContent = [];
		self.titles = [["Next", "Select a video."], ["Log in", "Log in to your YouTube account."], ["Upload", "Edit video information"]];
		self.count = 0;
		self.videopath = "";
		self.standardKeywords = "SR, Savage, Rebirth, Savage Rebirth, iminspace"; #Maybe ask Tirza about some standard keywords, she's the one who knows everything about YouTube.
	
	def showUploadWin(self):
		self.currentContent = demos.contents[0];
		demos.uploadWin.setVisible(1);
		supportedEndings = ["*.mov", "*.mp4"]; # I have no idea which video formats youtube supports; maybe this could be done in an easier way
		paths = [];
		for ending in supportedEndings:
			path = File_ListFiles("/videos",ending,0);	
			for video in path:
				paths.append(video);
		for path in paths:
			demos.videoList.addItem(str(path));
			
	def getVideoFile(self):	
		v = demos.videoList.getItem(demos.videoList.getSelected());
		return v;
		
	def swapContents(self, dir):
		self.previousContent = self.currentContent;
		self.count += dir;
		if self.count < 0 or self.count > 2:
			self.count = 0;
			demos.uploadWin.setVisible(0);
			self.currentContent = [];
		self.currentContent = demos.contents[self.count];		
		for element in self.previousContent:
			element.setVisible(0);
		for element in self.currentContent:	
			element.setVisible(1);	
		demos.next.setCaption(self.titles[self.count][0]);
		demos.title.setCaption(self.titles[self.count][1]);
		
	def onAction(self, e):
		widget = e.widget;
		if widget == demos.next:	
			#TODO: put a "Stop-icon" behind unfilled textfields
			if widget.getCaption() == "Next":
				self.videopath = self.getVideoFile();
			elif widget.getCaption() == "Log in":
				demos.uploadWin.workingWindow(1);
				#self.yt_service.email = demos.usernameInput.getText();
				#self.yt_service.password = demos.passwordInput.getText();
				#self.yt_service.ProgrammaticLogin(); 
				demos.uploadWin.workingWindow(0);
			elif widget.getCaption() == "Upload":
				videoTitle = demos.titleInput.getText();
				videoKeywords = self.standardKeywords + " , " + demos.keywordsInput.getText();
				videoDescription = demos.descriptionInput.getText();
				#mediaGroup = gdata.media.Group(
				# title =gdata.media.Title(text=videoTitle), 
				# description = gdata.media.Description(description_type='plain', text=videoDescription), 
				# keywords=gdata.media.Keywords(text=videoKeywords), 
				# category=[gdata.media.Category(text='Gaming', scheme='http://gdata.youtube.com/schemas/2007/categories.cat', label='Gaming')], 
				# player=None #The category scheme thingy is strange...
				# )
				#video_entry = gdata.youtube.YouTubeVideoEntry(media=mediaGroup);
				con_println("Uploading now...");
				#new_entry = yt_service.InsertVideoEntry(video_entry, self.videopath);
				## TODO: Show progress bar and video url; send a message to the devs somehow ( a video list would be nice)
				con_println("Finished uploading");
				## TODO: Put that ^ in a own function maybe
			self.swapContents(1);
		if widget == demos.back:
			self.swapContents(-1);			

handler = DemoHandler();
ythandler = UploadHandler();
confirmWin.addActionListener(handler);
next.addActionListener(ythandler);
back.addActionListener(ythandler);
yes.addActionListener(handler);
list.addSelectionListener(handler);
