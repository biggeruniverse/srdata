# (c) 2010 savagerebirth.com
# this file creates the heads-up display

from silverback import *;
import savage;
import glass;
from vectors import Vec3;

def frame():
	gametime = getGameTimeString(cvar_getvalue("game_timeLimitSeconds"));
	if gametime != "":
		if cvar_getvalue("game_timeLimitSeconds") < 45:
			gametime = "^900"+gametime;
		hud.timer.setCaption("^icon ../../gui/standard/icons/timer^" + gametime);
		hud.timer.adjustSize();
	else:
		hud.timer.setCaption("");
	
	player = savage.getLocalPlayer();
	
	hud.teamStatus.update();
	hud.updateGold();
	hud.updateHealth();
	hud.updateStamina();
	hud.inventory.updateAmmo();
	hud.stateContainer.update();
	hud.updateCrosshairLimits();
	hud.minimap.setAlpha(int(cvar_getvalue('cl_minimap_brightness')*255));
	hud.waypoint.update();
	hud.killtarget.update();
	hud.updateGameStatus();
	hud.crosshair.update();
	hud.voteWindow.frame();
	if hud.scoreboard.isVisible(): 
		hud.scoreboard.update();
	
	hud.fpswindow.update();

def onShow():
	hud.chatBox.deactivate();
	hud.minimap.setMap(cvar_get("world_overhead"));
	hud.scoreboard.arrange();
	hud.scoreboard.update(); #remove the placeholders in scoreboard
	hud.crosshair.reset();
	hud.voteWindow.reset();
	hud.timer.setCaption("");
	hud.killtarget.setVisible(0);
	hud.inventory.buildInventory();
	
	hud.frame(); #remove any other placeholders

glass.GUI_CreateScreen('hud');

## ORDER/WAYPOINT ##
waypoint = Waypoint();
waypoint.setVisible(0);
glass.GUI_ScreenAddWidget("hud", waypoint);
gblEventHandler.addGameListener(waypoint);

## KILLER TARGET ##
killtarget = Waypoint();
killtarget.setVisible(0);
killtarget.setImage("/gui/standard/icons/1_nl_way_killer.tga");
killtarget.showDistance(False);
glass.GUI_ScreenAddWidget("hud", killtarget);

class KillHandler:
	def __init__(self):
		pass;

	def onEvent(self, e):
		if e.eventType == "obituary":
			if e.targetId == savage.getLocalPlayer().objectId and e.sourceId != savage.getLocalPlayer().objectId:
				hud.killtarget.setVisible(1);
				hud.killtarget.setObject(savage.getGameObject(e.sourceId));
		elif e.eventType == "resurrection":
			if e.targetId == savage.getLocalPlayer().objectId:
				hud.killtarget.setVisible(0);

gblEventHandler.addGameListener(KillHandler());

#starting from the gold to the right of the minimap and proceeding anti clockwise

## MAP and surrounding things ##

minimap = glass.GlassMiniMap();
minimap.setPositionPct(0,0.025)
minimap.setX(10);
minimap.setSize(int(0.208*screenHeight),int(0.208*screenHeight));
#same number of pixels so it's square
#well assuming the pixel aspect ratio is 1:1
glass.GUI_ScreenAddWidget("hud",minimap);

player_money = glass.GlassLabel("_ABCDE ");
player_money.setForegroundColor(gold);
player_money.setPosition( int(minimap.getWidth() + 10 + screenWidth*0.01875), int(screenHeight*0.025));
glass.GUI_ScreenAddWidget("hud", player_money);

timer = glass.GlassLabel("_AB:CD ");
timer.setFont(glass.GUI_GetFont(20));
timer.setPositionPct(0.01875, 0.025+0.208);
glass.GUI_ScreenAddWidget("hud", timer);

## TEAM STATUS ##

teamStatus = ResourcePanel();
teamStatus.setVisible(0);
glass.GUI_ScreenAddWidget("hud", teamStatus);

## CHAT ##

chatBox = HUDChatBox();
glass.GUI_ScreenAddWidget("hud", chatBox);

chatBox.setPositionPct(0,0.415);
chatBox.setX(10);
chatBox.setSizePct(0.4,0.42);
chatBox.resize();


## HEALTH DISPLAY ##

healthBackground = glass.GlassLabel();
healthBackground.setBackgroundColor( glass.Color(133,11,10) );
healthBackground.setOpaque(1);
healthBackground.setSizePct(0.012,0.13);
healthBackground.setPosition( 10, screenHeight - 10 - healthBackground.getHeight());
glass.GUI_ScreenAddWidget("hud",healthBackground);

healthForeground = glass.GlassLabel();
healthForeground.setOpaque(1);
healthForeground.setBackgroundColor( glass.Color(255,21,22) );
healthForeground.setSizePct(0.012,0.13);
healthForeground.setPosition( healthBackground.getX(), healthBackground.getY());
glass.GUI_ScreenAddWidget("hud",healthForeground);

healthValue = glass.GlassLabel("00000");
healthValue.setFont(glass.GUI_GetFont(20));
healthValue.setForegroundColor( glass.Color(255,137,137) );
healthValue.setPosition( 20 + healthBackground.getWidth() , screenHeight - 10 - healthValue.getHeight(), );
glass.GUI_ScreenAddWidget("hud",healthValue);

## STATE EFFECT DISPLAY ##

stateContainer = StateDisplay();
#stateContainer.setX( healthValue.getX() + healthValue.getWidth() + 15 );
stateContainer.setX( (screenWidth - stateContainer.getWidth() )//2 );
stateContainer.setY( screenHeight - 10 - stateContainer.getHeight() );
glass.GUI_ScreenAddWidget("hud",stateContainer);

## VOICE CHAT ##

voiceChat = VoiceChatBox();
voiceChat.setSizePct(0.3,0.35);
voiceChat.table.adjustSizeToPct(1,1);
glass.GUI_ScreenAddWidget("hud",voiceChat);
voiceChat.centerWindow();
voiceChat.setY(screenHeight/2+40);

## STAMINA DISPLAY ##

staminaBackground = glass.GlassLabel();
staminaBackground.setBackgroundColor( glass.Color(10,115,110) );
staminaBackground.setOpaque(1);
staminaBackground.setSizePct(0.012,0.13);
staminaBackground.setPosition( screenWidth - staminaBackground.getWidth() - 10, healthBackground.getY() );
glass.GUI_ScreenAddWidget("hud",staminaBackground);

staminaForeground = glass.GlassLabel();
staminaForeground.setOpaque(1);
staminaForeground.setBackgroundColor( glass.Color(20,255,248) );
staminaForeground.setSizePct(0.012,0.13);
staminaForeground.setPosition( staminaBackground.getX(), staminaBackground.getY());
glass.GUI_ScreenAddWidget("hud",staminaForeground);

## INVENTORY ##

inventory = InventoryWindow();
inventory.setPosition( staminaBackground.getX() - 10 - inventory.getWidth() , (staminaBackground.getY() + staminaBackground.getHeight())  - inventory.getHeight());
glass.GUI_ScreenAddWidget("hud", inventory);

## NOTIFICATIONS ##
scroll = glass.GlassScrollArea();
scroll.setAutoscroll(1);
scroll.setSizePct(0.32,0.16);
scroll.setPosition(screenWidth-scroll.getWidth() - 10,10);
scroll.setScrollPolicy(1,1); #SHOW_NEVER
glass.GUI_ScreenAddWidget("hud", scroll);

notifyBuffer = MessageBuffer(["notify"]); #TODO notify_generalhide too?
scroll.setContent(notifyBuffer);
notifyBuffer.setSize(scroll.getWidth(), scroll.getHeight());
notifyBuffer.setFadeTop(1);
notifyBuffer.setFadeBottom(0);
notifyBuffer.showTime(0);
for i in range(10):
	notifyBuffer.addRow(" ");

## VOTES ##

voteWindow = VoteInfoBox();
glass.GUI_ScreenAddWidget("hud", voteWindow);
voteWindow.setPosition( minimap.getWidth() + minimap.getX() + 10, -voteWindow.getHeight());

# Finally objects in the screen's center, proceeding from the top downward

## GAME STATUS ##

gamestatusWindow = DefaultWindow();
gamestatusWindow.setFrameStyle("SmallEight");
gamestatusWindow.setPositionPct(.5,.35);
gamestatusWindow.setBackgroundColor(glass.Color(0,0,0,50));
glass.GUI_ScreenAddWidget("hud",gamestatusWindow);

gamestatus = glass.GlassLabel();
gamestatus.setForegroundColor(glass.Color(255,255,255));
gamestatusWindow.add(gamestatus,0,0);


## CROSSHAIR ##

crosshair = HUDCrossHair();
glass.GUI_ScreenAddWidget("hud",crosshair);

crosshairLimits = glass.GlassLabel("");
crosshairLimits.setBaseColor( white );
crosshairLimits.setSize(0,0);
crosshairLimits.setFrameSize(4);
glass.GUI_ScreenAddWidget("hud",crosshairLimits);

crosshairLimitsPadding = crosshair.crosshair.getWidth()//2;

### SCOREBAORD ##

scoreboard = TeamScore();
glass.GUI_ScreenAddWidget("hud",scoreboard);

## FPS WINDOW ##

fpswindow = FpsWindow();
fpswindow.setPositionPct(0, 0.5);
glass.GUI_ScreenAddWidget("hud",fpswindow);

## Graphics Panel ##

graphicspanel = GraphicsPanel();
graphicspanel.setPositionPct(0.4,0.1);
glass.GUI_ScreenAddWidget("hud",graphicspanel);

## Vote Window ##

voteSelection = VoteSelectionWindow();
glass.GUI_ScreenAddWidget("hud",voteSelection);
voteSelection.setPosition(screenWidth // 2 - voteSelection.getWidth() // 2, screenHeight//2);

def updateGold():
	player = savage.getLocalPlayer();
	gold = player.getGold();
	if gold != None:
		hud.player_money.setCaption("^icon ../../gui/standard/icons/gold/gold_icon^" + str(gold));
	else: hud.player_money.setCaption("");

def updateHealth():
	player = savage.getLocalPlayer();
	healthProportion = player.getHealthPct()
	
	hud.healthValue.setCaption( str(player.getHealth() ));
	hud.healthForeground.setHeight( int( hud.healthBackground.getHeight()*healthProportion ) );
	hud.healthForeground.setY( hud.healthBackground.getHeight() + hud.healthBackground.getY() - hud.healthForeground.getHeight() );

def updateStamina():
	player = savage.getLocalPlayer();
	staminaProportion = player.getStaminaPct();
	
	hud.staminaForeground.setHeight( int( hud.staminaBackground.getHeight()*staminaProportion) );
	hud.staminaForeground.setY( hud.staminaBackground.getHeight() + hud.staminaBackground.getY() - hud.staminaForeground.getHeight() );

def updateGameStatus():
	status = cvar_get("game_serverStatus")
	if len(status)>0:
		hud.gamestatus.setCaption(" "+status+" ")
		hud.gamestatusWindow.setVisible(1);
	else:
		hud.gamestatus.setCaption("");
		hud.gamestatusWindow.setVisible(0);
	hud.gamestatus.adjustSize()
	hud.gamestatusWindow.setSize(hud.gamestatus.getWidth(), hud.gamestatus.getHeight());
	hud.gamestatusWindow.setPosition(screenWidthPct(0.5)-hud.gamestatusWindow.getWidth()/2, hud.gamestatusWindow.getY())

def updateCrosshairLimits():
	player = savage.getLocalPlayer();
	player_objType = player.getType();
	xmin = player_objType.getValue("minAimX");
	xmax = player_objType.getValue("maxAimX");
	ymin = player_objType.getValue("minAimY");
	ymax = player_objType.getValue("maxAimY");
	
	hud.crosshairLimits.setPosition(int( screenWidth * xmin) - hud.crosshairLimitsPadding , int( screenHeight * ymin) - hud.crosshairLimitsPadding );
	hud.crosshairLimits.setWidth(int( screenWidth * (xmax-xmin)) + 2*hud.crosshairLimitsPadding);
	hud.crosshairLimits.setHeight(int( screenHeight * (ymax-ymin))+ 2*hud.crosshairLimitsPadding);

nonSpecWidgets = [ healthForeground, healthBackground , healthValue , staminaBackground, staminaForeground , inventory, stateContainer, player_money, crosshairLimits ];
